{"version":3,"sources":["main.js"],"names":["PlanetaryMap","evt","console","log","axios","get","API_BASE_URL","then","processResults","response","handleSearch"],"mappings":";;;;;;IACMA,Y,GACF;AAGA,wBAAa;AAAA;;AAAA;;AAAA,wCAFE,oEAEF;;AAAA,wCAKE,UAACC,GAAD,EAAS;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAC,IAAAA,KAAK,CAACC,GAAN,CAAU,KAAI,CAACC,YAAf,EAA6BC,IAA7B,CAAkC,KAAI,CAACC,cAAvC;AACH,GARY;;AAAA,0CASI,UAACC,QAAD,EAAc;AAC3BP,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCM,QAAtC,EAD2B,CAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GAnBY;;AAET,OAAKC,YAAL;AACH,C;;AAmBL,IAAIV,YAAJ","sourcesContent":["\r\nclass PlanetaryMap{\r\n    // API_BASE_URL = 'https://api.le-systeme-solaire.net/rest/bodies/'\r\n    API_BASE_URL = \"https://ssd.jpl.nasa.gov/api/horizons.api?format=text&COMMAND='MB'\"\r\n\r\n    constructor(){\r\n\r\n        this.handleSearch()\r\n    }\r\n\r\n    handleSearch = (evt) => {\r\n        console.log('searching....')\r\n        axios.get(this.API_BASE_URL).then(this.processResults)\r\n    }\r\n    processResults = (response) => {\r\n        console.log('your results captain: ', response)\r\n        // let responseData = response.data.bodies\r\n        // for(let ri = 0; ri < responseData.length; ri++){\r\n        //     if (responseData[ri].isPlanet === true){\r\n        //         console.log(responseData[ri].englishName, \" \", responseData[ri].sideralOrbit, \" \", responseData[ri].sideralRotation)\r\n        //         console.log(responseData[ri])\r\n        //     }\r\n        // }\r\n        \r\n    }\r\n}\r\n\r\nnew PlanetaryMap()"],"file":"main.js"}